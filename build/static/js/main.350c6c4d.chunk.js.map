{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","console","log","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setTask","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.350c6c4d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\nreturn <button style={{backgroundColor: color}} className='btn' onClick={onClick}>{text} </button>\n}\n\nconst onClick = () => {\n    console.log('Hello');\n}\n\nButton.defaultProps = {\n    onClick: onClick,\n    color: 'steelBlue'\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClickButton: PropTypes.func.isRequired\n}\nexport default Button;","import PropTypes from 'prop-types';\nimport Button from './Button'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title : 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header;","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return(\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style={{color:'red', cursor:'pointer'}} onClick={() => onDelete(task.id)} /></h3>\n            <p>{task.day}</p>\n        </div>\n    \n    )\n}\n\nexport default Task","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {  \n    return (\n        <>\n        {tasks.map((task) => (\n           <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n        ))}\n        </>\n    )\n}\n\nexport default Tasks;","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setTask] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!text) {\n            alert('Please add a Task');\n            return\n        }\n\n        onAdd({text, day, reminder});\n\n        setTask('');\n        setDay('')\n        setReminder(false)\n    }\n\n\n    return (\n    <form className='add-form' onSubmit={onSubmit}>\n        <div className='form-control'>\n            <label>Task</label>\n            <input type='text' placeholder='Add Task' value={text} onChange={(e) => setTask(e.target.value)}/>\n        </div>\n        <div className='form-control'>\n            <label>Day & Time</label>\n            <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\n        </div>\n        <div className='form-control form-control-check'>\n            <label>Set Reminder</label>\n            <input type='checkbox'value={reminder} checked={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\n        </div>\n        <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>\n    )\n}\n\nexport default AddTask;","import {useState} from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTask] = useState(\n      [\n        {id: 1, text: \"Doctor Appoinment\", day: \"June, 06, 2021\", reminder: true},\n        {id: 2, text: \"Meeting at School,\", day: \"August, 01, 2020\", reminder: true},\n        {id: 3, text: \"Food Shopping,\", day: \"April, 10, 2021\", reminder: true}\n      ]\n    );\n\n    //Add Task\n    const addTask = (task) => {\n      const id = Math.floor(Math.random() * 1000)+ 1;\n      const newTask = {id, ...task}\n\n      setTask([newTask, ...tasks])\n    }\n\n    // Delete Task\n    const deleteTask = (id) => {\n      setTask(tasks.filter((task) => task.id !== id))\n    }\n\n    //Toggle Reminder\n\n    const toggleReminder = (id) => {\n      setTask(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task) \n      )\n    }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Task to Show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}